{"code":"// @ts-nocheck\nimport { Plugin, Notice, PluginSettingTab, Setting, normalizePath } from 'obsidian';\nimport fs from 'fs';\nimport path from 'path';\nimport { spawn } from 'child_process';\n// Custom logger with levels\nclass Logger {\n    static debug(message, ...args) {\n        if (Logger.level <= Logger.DEBUG) {\n            console.debug(`[${Logger.prefix}] ${message}`, ...args);\n        }\n    }\n    static info(message, ...args) {\n        if (Logger.level <= Logger.INFO) {\n            console.info(`[${Logger.prefix}] ${message}`, ...args);\n        }\n    }\n    static warn(message, ...args) {\n        if (Logger.level <= Logger.WARN) {\n            console.warn(`[${Logger.prefix}] ${message}`, ...args);\n        }\n    }\n    static error(message, ...args) {\n        if (Logger.level <= Logger.ERROR) {\n            console.error(`[${Logger.prefix}] ${message}`, ...args);\n        }\n    }\n}\nLogger.DEBUG = 0;\nLogger.INFO = 1;\nLogger.WARN = 2;\nLogger.ERROR = 3;\nLogger.level = Logger.DEBUG; // Set minimum log level\nLogger.prefix = \"EditNext\";\nconst DEFAULT_SETTINGS = {\n    openaiApiKey: '',\n    pythonPath: 'python3',\n    weights: [0.6, 0.2, 0.2],\n    model: 'gpt-4o-mini',\n    targetFolder: '',\n    excludeFolders: [],\n    dashboardAsHomePage: false,\n};\n// --------------------------------------------------\n// Helper to run external python process\n// --------------------------------------------------\nasync function runRanker(app, plugin, settings) {\n    return new Promise((resolve, reject) => {\n        // Determine folder absolute path\n        const vaultPath = app.vault.adapter.getBasePath();\n        const targetDir = settings.targetFolder\n            ? path.join(vaultPath, normalizePath(settings.targetFolder))\n            : vaultPath;\n        Logger.debug(\"Running ranker with settings:\", settings);\n        Logger.debug(\"Target directory:\", targetDir);\n        // Ensure directory exists\n        if (!fs.existsSync(targetDir)) {\n            const error = `Target directory not found: ${targetDir}`;\n            Logger.error(error);\n            reject(new Error(error));\n            return;\n        }\n        // Try multiple possible script locations\n        const possibleScriptPaths = [\n            // Try in plugin's data directory (relative to plugin location)\n            path.join(plugin.manifest.dir, 'data', 'essay-quality-ranker.py'),\n            // Try in the vault root\n            path.join(vaultPath, 'essay-quality-ranker.py'),\n            // Try in current execution directory\n            path.join(process.cwd(), 'essay-quality-ranker.py'),\n            // Try in parent directory\n            path.join(process.cwd(), '..', 'essay-quality-ranker.py'),\n            // Path relative to the vault (assuming plugin is installed in .obsidian/plugins)\n            path.join(vaultPath, '.obsidian', 'plugins', 'editnext-plugin', 'data', 'essay-quality-ranker.py')\n        ];\n        let scriptPath = null;\n        for (const tryPath of possibleScriptPaths) {\n            Logger.debug(`Checking script path: ${tryPath}`);\n            if (fs.existsSync(tryPath)) {\n                scriptPath = tryPath;\n                Logger.debug(`Found script at: ${scriptPath}`);\n                break;\n            }\n        }\n        // Check if script exists\n        if (!scriptPath) {\n            const error = `Script not found in any of the expected locations. Please place essay-quality-ranker.py in your plugin's data folder or vault root.`;\n            Logger.error(error);\n            reject(new Error(error));\n            return;\n        }\n        const cmdArgs = [\n            scriptPath,\n            targetDir,\n            '--weights',\n            ...settings.weights.map((w) => w.toString()),\n            '--model',\n            settings.model,\n            '--json' // Always request JSON output\n        ];\n        // Include exclude folders if specified\n        if (settings.excludeFolders && settings.excludeFolders.length > 0) {\n            cmdArgs.push('--exclude-folders');\n            cmdArgs.push(...settings.excludeFolders);\n            Logger.debug('Excluding folders:', settings.excludeFolders);\n        }\n        Logger.debug(\"Command:\", settings.pythonPath, cmdArgs.join(' '));\n        // Provide environment\n        const env = { ...process.env, OPENAI_API_KEY: settings.openaiApiKey };\n        Logger.debug(\"API key set:\", !!settings.openaiApiKey);\n        // Spawn child process\n        try {\n            const child = spawn(settings.pythonPath, cmdArgs, { env });\n            let output = '';\n            let errorOutput = '';\n            child.stdout.on('data', (data) => {\n                const chunk = data.toString();\n                Logger.debug(`Python stdout: ${chunk}`);\n                output += chunk;\n            });\n            child.stderr.on('data', (data) => {\n                const chunk = data.toString();\n                Logger.error(`Python stderr: ${chunk}`);\n                errorOutput += chunk;\n            });\n            child.on('error', (err) => {\n                Logger.error(\"Process error:\", err);\n                reject(err);\n            });\n            child.on('close', (code) => {\n                Logger.debug(`Process exited with code ${code}`);\n                if (code === 0) {\n                    try {\n                        // Try to parse the JSON output\n                        const results = JSON.parse(output);\n                        // Sort results by composite_score ascending (lowest first)\n                        if (Array.isArray(results)) {\n                            results.sort((a, b) => a.composite_score - b.composite_score);\n                        }\n                        resolve(results);\n                    }\n                    catch (e) {\n                        // Fallback to raw text if JSON parsing fails\n                        Logger.warn(\"Failed to parse JSON output, returning raw text:\", e);\n                        resolve(output);\n                    }\n                }\n                else {\n                    const error = `Process exited with code ${code}${errorOutput ? ': ' + errorOutput : ''}`;\n                    Logger.error(error);\n                    reject(new Error(error));\n                }\n            });\n        }\n        catch (err) {\n            Logger.error(\"Failed to spawn process:\", err);\n            reject(err);\n        }\n    });\n}\n// --------------------------------------------------\n// Plugin implementation\n// --------------------------------------------------\nexport default class EditNextPlugin extends Plugin {\n    constructor() {\n        super(...arguments);\n        this.settings = DEFAULT_SETTINGS;\n        this.ribbonEl = null;\n        this.statusBarItem = null;\n        this.dashboardFilename = 'editnext-dashboard.md';\n    }\n    async onload() {\n        Logger.info('Loading EditNext Ranker plugin');\n        try {\n            // Log plugin details\n            Logger.debug(\"Plugin directory:\", this.manifest.dir);\n            Logger.debug(\"Plugin version:\", this.manifest.version);\n            await this.loadSettings();\n            Logger.debug(\"Settings loaded:\", this.settings);\n            // Add ribbon icon\n            this.ribbonEl = this.addRibbonIcon('file-edit', 'EditNext Ranker', async () => {\n                this.runRankerCommand();\n            });\n            // Add status bar item (initially hidden)\n            this.statusBarItem = this.addStatusBarItem();\n            this.statusBarItem.addClass('editnext-status');\n            this.statusBarItem.style.display = 'none';\n            // Register command\n            this.addCommand({\n                id: 'editnext-rank-files',\n                name: 'Rank files by editing effort',\n                callback: async () => {\n                    this.runRankerCommand();\n                },\n            });\n            // Add command to update frontmatter\n            this.addCommand({\n                id: 'editnext-update-frontmatter',\n                name: 'Update current note with edit score',\n                editorCallback: async (editor, view) => {\n                    await this.updateCurrentNoteFrontmatter(view);\n                }\n            });\n            // Add command to open dashboard\n            this.addCommand({\n                id: 'editnext-open-dashboard',\n                name: 'Open EditNext Dashboard',\n                callback: async () => {\n                    await this.openDashboard();\n                },\n            });\n            // Add settings tab\n            this.addSettingTab(new EditNextSettingTab(this.app, this));\n            // Register for layout ready event to handle home page\n            this.app.workspace.onLayoutReady(() => {\n                if (this.settings.dashboardAsHomePage) {\n                    // Try to open the markdown dashboard file\n                    const dashboardFile = this.app.vault.getAbstractFileByPath(this.dashboardFilename);\n                    if (dashboardFile) {\n                        // Only open if no other leaves are open\n                        if (this.app.workspace.getLeavesOfType('markdown').length === 0) {\n                            const leaf = this.app.workspace.getLeaf('tab');\n                            leaf.openFile(dashboardFile);\n                        }\n                    }\n                    else {\n                        // Fallback to generating new dashboard\n                        if (this.app.workspace.getLeavesOfType('markdown').length === 0) {\n                            this.openDashboard();\n                        }\n                    }\n                }\n            });\n            Logger.info('EditNext Ranker plugin loaded successfully');\n        }\n        catch (err) {\n            Logger.error(\"Error during plugin load:\", err);\n            throw err; // Re-throw to let Obsidian handle it\n        }\n    }\n    onunload() {\n        Logger.info('Unloading EditNext Ranker plugin');\n        // Clear references\n        this.ribbonEl = null;\n        this.statusBarItem = null;\n    }\n    async runRankerCommand() {\n        // Show persistent callout for processing\n        const processingNotice = new Notice('⏳ Running EditNext ranker...', 0);\n        // Show progress in status bar\n        if (this.statusBarItem) {\n            this.statusBarItem.setText('EditNext: Analyzing files...');\n            this.statusBarItem.style.display = 'block';\n        }\n        try {\n            await this.openDashboard();\n            // Hide status bar item\n            if (this.statusBarItem) {\n                this.statusBarItem.style.display = 'none';\n            }\n            // Hide processing callout on success\n            processingNotice.hide();\n        }\n        catch (err) {\n            // Hide status bar on error\n            if (this.statusBarItem) {\n                this.statusBarItem.style.display = 'none';\n            }\n            // Hide processing callout on error\n            processingNotice.hide();\n            const errorMsg = err.message;\n            Logger.error(\"Ranker error:\", err);\n            new Notice(`EditNext error: ${errorMsg}`);\n        }\n    }\n    async updateAllFrontmatter(results) {\n        try {\n            for (const result of results) {\n                await this.updateFileFrontmatter(result);\n            }\n            Logger.info(`Updated frontmatter for ${results.length} files`);\n        }\n        catch (err) {\n            Logger.error(\"Error updating frontmatter:\", err);\n        }\n    }\n    async updateFileFrontmatter(result) {\n        try {\n            // Find the file in the vault\n            const files = this.app.vault.getFiles();\n            // First try direct path match\n            let targetFile = files.find(f => f.path === result.file);\n            // If not found, try just the filename\n            if (!targetFile) {\n                const fileName = result.file.split(/[\\/\\\\]/).pop();\n                targetFile = files.find(f => f.name === fileName);\n            }\n            if (!targetFile) {\n                Logger.warn(`File not found for frontmatter update: ${result.file}`);\n                return;\n            }\n            // Read the file content\n            const content = await this.app.vault.read(targetFile);\n            // Update or add frontmatter\n            const newContent = this.updateYamlFrontmatter(content, {\n                edit_score: result.composite_score,\n                llm_score: result.llm_score,\n                grammar_score: result.grammar_score,\n                readability_score: result.readability_score\n            });\n            // Write back if changed\n            if (newContent !== content) {\n                await this.app.vault.modify(targetFile, newContent);\n                Logger.debug(`Updated frontmatter for ${targetFile.path}`);\n            }\n        }\n        catch (err) {\n            Logger.error(`Error updating frontmatter for ${result.file}:`, err);\n        }\n    }\n    async updateCurrentNoteFrontmatter(view) {\n        if (!view || !view.file) {\n            new Notice(\"No active file\");\n            return;\n        }\n        try {\n            // Get current file\n            const file = view.file;\n            // Run ranker just for this file\n            const vaultPath = this.app.vault.adapter.getBasePath();\n            const filePath = path.join(vaultPath, file.path);\n            const dirPath = path.dirname(filePath);\n            new Notice(`Analyzing ${file.name}...`);\n            // Override target folder to only score this one file\n            const originalFolder = this.settings.targetFolder;\n            this.settings.targetFolder = path.relative(vaultPath, dirPath);\n            // Run ranker\n            const results = await runRanker(this.app, this, this.settings);\n            // Restore original setting\n            this.settings.targetFolder = originalFolder;\n            if (Array.isArray(results) && results.length > 0) {\n                // Find this file in results\n                const result = results.find(r => {\n                    const resultName = r.file.split(/[\\/\\\\]/).pop();\n                    return resultName === file.name;\n                });\n                if (result) {\n                    await this.updateFileFrontmatter(result);\n                    new Notice(`Updated edit scores for ${file.name}`);\n                }\n                else {\n                    new Notice(`Could not find analysis results for ${file.name}`);\n                }\n            }\n            else {\n                new Notice(\"No results returned from analysis\");\n            }\n        }\n        catch (err) {\n            Logger.error(\"Error updating current note:\", err);\n            new Notice(`Error: ${err.message}`);\n        }\n    }\n    updateYamlFrontmatter(content, data) {\n        // Regular expressions for frontmatter detection\n        const yamlRegex = /^---\\n([\\s\\S]*?)\\n---\\n/;\n        const match = content.match(yamlRegex);\n        if (match) {\n            // Frontmatter exists, parse it\n            try {\n                const yamlContent = match[1];\n                // Basic YAML parsing/manipulation without external dependencies\n                let frontmatter = {};\n                const lines = yamlContent.split('\\n');\n                for (const line of lines) {\n                    const keyValue = line.split(':');\n                    if (keyValue.length >= 2) {\n                        const key = keyValue[0].trim();\n                        const value = keyValue.slice(1).join(':').trim();\n                        if (key && value) {\n                            frontmatter[key] = value;\n                        }\n                    }\n                }\n                // Update with new data\n                frontmatter = { ...frontmatter, ...data };\n                // Serialize back to YAML\n                let newYaml = '---\\n';\n                for (const [key, value] of Object.entries(frontmatter)) {\n                    // Format numbers nicely\n                    const formattedValue = typeof value === 'number' ?\n                        Number.isInteger(value) ? value : value.toFixed(1) :\n                        value;\n                    newYaml += `${key}: ${formattedValue}\\n`;\n                }\n                newYaml += '---\\n';\n                // Replace old frontmatter\n                return content.replace(yamlRegex, newYaml);\n            }\n            catch (e) {\n                Logger.error(\"Error parsing frontmatter:\", e);\n                // If parsing fails, append new frontmatter properties\n                let newYaml = match[0];\n                for (const [key, value] of Object.entries(data)) {\n                    const formattedValue = typeof value === 'number' ?\n                        Number.isInteger(value) ? value : value.toFixed(1) :\n                        value;\n                    // Insert before the closing ---\n                    newYaml = newYaml.replace(/---\\n$/, `${key}: ${formattedValue}\\n---\\n`);\n                }\n                return content.replace(yamlRegex, newYaml);\n            }\n        }\n        else {\n            // No frontmatter, add new one\n            let newYaml = '---\\n';\n            for (const [key, value] of Object.entries(data)) {\n                const formattedValue = typeof value === 'number' ?\n                    Number.isInteger(value) ? value : value.toFixed(1) :\n                    value;\n                newYaml += `${key}: ${formattedValue}\\n`;\n            }\n            newYaml += '---\\n\\n';\n            return newYaml + content;\n        }\n    }\n    async loadSettings() {\n        try {\n            const savedData = await this.loadData();\n            Logger.debug(\"Loaded saved data:\", savedData);\n            this.settings = Object.assign({}, DEFAULT_SETTINGS, savedData);\n            // Ensure excludeFolders is initialized as an array\n            if (!Array.isArray(this.settings.excludeFolders)) {\n                this.settings.excludeFolders = [];\n                await this.saveSettings();\n            }\n        }\n        catch (err) {\n            Logger.error(\"Failed to load settings:\", err);\n            this.settings = { ...DEFAULT_SETTINGS };\n        }\n    }\n    async saveSettings() {\n        try {\n            await this.saveData(this.settings);\n            Logger.debug(\"Settings saved successfully\");\n        }\n        catch (err) {\n            Logger.error(\"Failed to save settings:\", err);\n        }\n    }\n    // Helper method to save dashboard as markdown\n    async saveDashboardToMarkdown(results) {\n        try {\n            if (!results || results.length === 0) {\n                return;\n            }\n            let content = '---\\nalias: [EditNext Dashboard]\\n---\\n\\n';\n            content += '# 📝 EditNext Dashboard\\n\\n';\n            content += '_Last updated: ' + new Date().toLocaleString() + '_\\n\\n';\n            // Add table headers\n            content += '| File | Score | LLM | Grammar | Readability | Notes |\\n';\n            content += '|------|-------|-----|---------|-------------|-------|\\n';\n            // Add table rows\n            for (const result of results) {\n                const fileName = result.file.split(/[\\/\\\\]/).pop();\n                const score = result.composite_score.toFixed(1);\n                const llm = result.llm_score.toString();\n                const grammar = result.grammar_score.toFixed(1);\n                const readability = result.readability_score.toFixed(1);\n                const notes = result.notes || '';\n                // Create a wiki-link to the file\n                const fileLink = `[[${fileName}]]`;\n                content += `| ${fileLink} | ${score} | ${llm} | ${grammar} | ${readability} | ${notes} |\\n`;\n            }\n            // Save the file\n            const file = this.app.vault.getAbstractFileByPath(this.dashboardFilename);\n            if (file) {\n                await this.app.vault.modify(file, content);\n            }\n            else {\n                await this.app.vault.create(this.dashboardFilename, content);\n            }\n            Logger.debug('Dashboard saved as markdown file');\n        }\n        catch (err) {\n            Logger.error('Error saving dashboard to markdown:', err);\n            throw err;\n        }\n    }\n    // Helper method to open dashboard\n    async openDashboard() {\n        try {\n            // Run the ranker to get fresh results\n            const results = await runRanker(this.app, this, this.settings);\n            // Update frontmatter if we have results\n            if (Array.isArray(results)) {\n                await this.updateAllFrontmatter(results);\n                // Save dashboard as markdown\n                await this.saveDashboardToMarkdown(results);\n            }\n            // Try to open the markdown file if it exists\n            const dashboardFile = this.app.vault.getAbstractFileByPath(this.dashboardFilename);\n            if (dashboardFile && this.settings.dashboardAsHomePage) {\n                const leaf = this.app.workspace.getLeaf('tab');\n                await leaf.openFile(dashboardFile);\n            }\n            else {\n                // Fallback to the view if file doesn't exist or setting is disabled\n                const existingLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE)[0];\n                const leaf = existingLeaf || this.app.workspace.getLeaf('tab');\n                await leaf.open(new EditNextResultView(leaf, results));\n            }\n        }\n        catch (err) {\n            Logger.error(\"Error opening dashboard:\", err);\n            new Notice(`Error opening dashboard: ${err.message}`);\n        }\n    }\n}\n// --------------------------------------------------\n// View to display results (interactive dashboard)\n// --------------------------------------------------\nimport { ItemView } from 'obsidian';\nconst VIEW_TYPE = 'editnext-results';\nclass EditNextResultView extends ItemView {\n    constructor(leaf, data) {\n        super(leaf);\n        this.results = null;\n        this.resultText = '';\n        this.isJsonData = false;\n        if (Array.isArray(data)) {\n            this.results = data;\n            this.isJsonData = true;\n        }\n        else {\n            // Fallback for plain text results\n            this.resultText = String(data);\n            this.isJsonData = false;\n        }\n    }\n    getViewType() {\n        return VIEW_TYPE;\n    }\n    getDisplayText() {\n        return 'Grooming the garden';\n    }\n    getIcon() {\n        return 'file-edit';\n    }\n    async onOpen() {\n        const container = this.containerEl.children[1];\n        container.empty();\n        container.addClass('editnext-dashboard');\n        // Add custom styles\n        const styleEl = document.createElement('style');\n        styleEl.textContent = `\n      .editnext-dashboard {\n        padding: 20px;\n      }\n      .editnext-header {\n        margin-bottom: 20px;\n      }\n      .editnext-table {\n        width: 100%;\n        border-collapse: collapse;\n      }\n      .editnext-table th {\n        text-align: left;\n        padding: 8px;\n        border-bottom: 2px solid var(--background-modifier-border);\n        font-weight: bold;\n        cursor: pointer;\n      }\n      .editnext-table td {\n        padding: 8px;\n        border-bottom: 1px solid var(--background-modifier-border);\n      }\n      .editnext-file-link {\n        cursor: pointer;\n        color: var(--text-accent);\n        text-decoration: none;\n      }\n      .editnext-file-link:hover {\n        text-decoration: underline;\n      }\n      .editnext-row-high {\n        background-color: rgba(255, 100, 100, 0.1);\n      }\n      .editnext-row-medium {\n        background-color: rgba(255, 200, 0, 0.1);\n      }\n      .editnext-row-low {\n        background-color: rgba(100, 255, 100, 0.1);\n      }\n      .editnext-badge {\n        display: inline-block;\n        padding: 2px 8px;\n        border-radius: 4px;\n        font-size: 0.8em;\n        font-weight: bold;\n      }\n      .editnext-badge-high {\n        background-color: rgba(255, 100, 100, 0.2);\n        color: #d32f2f;\n      }\n      .editnext-badge-medium {\n        background-color: rgba(255, 200, 0, 0.2);\n        color: #f57c00;\n      }\n      .editnext-badge-low {\n        background-color: rgba(100, 255, 100, 0.2);\n        color: #388e3c;\n      }\n    `;\n        container.prepend(styleEl);\n        // Header\n        const header = container.createEl('div', { cls: 'editnext-header' });\n        header.createEl('h2', { text: 'EditNext Dashboard' });\n        if (this.isJsonData && this.results) {\n            this.renderInteractiveTable(container);\n        }\n        else {\n            // Fallback to plain text display\n            const pre = container.createEl('pre');\n            pre.style.whiteSpace = 'pre-wrap';\n            pre.setText(this.resultText);\n        }\n    }\n    async renderInteractiveTable(container) {\n        if (!this.results || this.results.length === 0) {\n            container.createEl('p', { text: 'No results found.' });\n            return;\n        }\n        // Create table\n        const table = container.createEl('table', { cls: 'editnext-table' });\n        // Table header\n        const thead = table.createEl('thead');\n        const headerRow = thead.createEl('tr');\n        // Add headers with sort functionality\n        const headers = [\n            { key: 'file', text: 'File' },\n            { key: 'composite_score', text: 'Score' },\n            { key: 'llm_score', text: 'LLM' },\n            { key: 'grammar_score', text: 'Grammar' },\n            { key: 'readability_score', text: 'Readability' },\n            { key: 'notes', text: 'Notes' }\n        ];\n        for (const header of headers) {\n            const th = headerRow.createEl('th');\n            th.setText(header.text);\n            th.dataset.key = header.key;\n            // Add click handler for sorting\n            th.addEventListener('click', () => {\n                this.sortResults(header.key);\n                this.refreshTable(table);\n            });\n        }\n        // Table body\n        const tbody = table.createEl('tbody');\n        this.populateTableRows(tbody);\n    }\n    populateTableRows(tbody) {\n        if (!this.results)\n            return;\n        tbody.empty();\n        for (const result of this.results) {\n            const row = tbody.createEl('tr');\n            // Add row class based on score\n            if (result.composite_score >= 70) {\n                row.addClass('editnext-row-high');\n            }\n            else if (result.composite_score >= 40) {\n                row.addClass('editnext-row-medium');\n            }\n            else {\n                row.addClass('editnext-row-low');\n            }\n            // File cell with clickable link\n            const fileCell = row.createEl('td');\n            const fileLink = fileCell.createEl('a', {\n                cls: 'editnext-file-link',\n                text: this.getFileName(result.file)\n            });\n            fileLink.addEventListener('click', async () => {\n                await this.openFile(result.file);\n            });\n            // Score with colored badge\n            const scoreCell = row.createEl('td');\n            const scoreBadge = scoreCell.createEl('span', {\n                cls: `editnext-badge ${this.getScoreClass(result.composite_score)}`,\n                text: result.composite_score.toFixed(1)\n            });\n            // Other metrics\n            row.createEl('td', { text: result.llm_score.toString() });\n            row.createEl('td', { text: result.grammar_score.toFixed(1) });\n            row.createEl('td', { text: result.readability_score.toFixed(1) });\n            row.createEl('td', { text: result.notes });\n        }\n    }\n    sortResults(key) {\n        if (!this.results)\n            return;\n        const isNumeric = key !== 'file' && key !== 'notes';\n        this.results.sort((a, b) => {\n            if (isNumeric) {\n                return b[key] - a[key]; // Descending for numeric\n            }\n            else {\n                return String(a[key]).localeCompare(String(b[key])); // Ascending for text\n            }\n        });\n    }\n    refreshTable(table) {\n        const tbody = table.querySelector('tbody');\n        if (tbody) {\n            this.populateTableRows(tbody);\n        }\n    }\n    getFileName(path) {\n        const parts = path.split(/[\\/\\\\]/);\n        return parts[parts.length - 1];\n    }\n    getScoreClass(score) {\n        if (score >= 70)\n            return 'editnext-badge-high';\n        if (score >= 40)\n            return 'editnext-badge-medium';\n        return 'editnext-badge-low';\n    }\n    async openFile(filePath) {\n        try {\n            // Find the file in the vault\n            const files = this.app.vault.getFiles();\n            let targetFile = null;\n            // First try direct path match\n            targetFile = files.find(f => f.path === filePath) || null;\n            // If not found, try the filename\n            if (!targetFile) {\n                const fileName = this.getFileName(filePath);\n                targetFile = files.find(f => f.name === fileName) || null;\n            }\n            if (targetFile) {\n                // Open the file in a new leaf\n                await this.app.workspace.getLeaf(false).openFile(targetFile);\n            }\n            else {\n                new Notice(`File not found: ${filePath}`);\n            }\n        }\n        catch (err) {\n            Logger.error(\"Error opening file:\", err);\n            new Notice(`Error opening file: ${err.message}`);\n        }\n    }\n    async onClose() {\n        // Clean up\n    }\n}\n// --------------------------------------------------\n// Settings Tab UI\n// --------------------------------------------------\nclass EditNextSettingTab extends PluginSettingTab {\n    constructor(app, plugin) {\n        super(app, plugin);\n        this.plugin = plugin;\n        Logger.debug(\"Settings tab initialized\");\n    }\n    display() {\n        const { containerEl } = this;\n        Logger.debug(\"Settings tab displayed\");\n        containerEl.empty();\n        containerEl.createEl('h2', { text: 'EditNext Ranker Settings' });\n        new Setting(containerEl)\n            .setName('OpenAI API Key')\n            .setDesc('Required to query GPT models')\n            .addText((text) => text\n            .setPlaceholder('sk-XXXX')\n            .setValue(this.plugin.settings.openaiApiKey)\n            .onChange(async (value) => {\n            this.plugin.settings.openaiApiKey = value.trim();\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName('Python Path')\n            .setDesc('Path to Python executable (with dependencies installed)')\n            .addText((text) => text\n            .setPlaceholder('python3')\n            .setValue(this.plugin.settings.pythonPath)\n            .onChange(async (value) => {\n            this.plugin.settings.pythonPath = value.trim() || 'python3';\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName('Weights')\n            .setDesc('Three numbers for LLM, Grammar, Readability weights (sum 1.0)')\n            .addText((text) => text\n            .setPlaceholder('0.6 0.2 0.2')\n            .setValue(this.plugin.settings.weights.join(' '))\n            .onChange(async (value) => {\n            const parts = value.split(/\\s+/).map(Number);\n            if (parts.length === 3 && parts.every((n) => !isNaN(n))) {\n                this.plugin.settings.weights = parts;\n                await this.plugin.saveSettings();\n            }\n        }));\n        new Setting(containerEl)\n            .setName('OpenAI Model')\n            .setDesc('Model to use for scoring')\n            .addText((text) => text.setPlaceholder('gpt-4o-mini').setValue(this.plugin.settings.model).onChange(async (value) => {\n            this.plugin.settings.model = value.trim();\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName('Target Folder')\n            .setDesc('Relative path inside vault; leave blank for entire vault')\n            .addText((text) => text\n            .setPlaceholder('drafts')\n            .setValue(this.plugin.settings.targetFolder)\n            .onChange(async (value) => {\n            this.plugin.settings.targetFolder = value.trim();\n            await this.plugin.saveSettings();\n        }));\n        // Exclude subfolders setting\n        new Setting(containerEl)\n            .setName('Exclude Subfolders')\n            .setDesc('Comma-separated list of subfolders (relative to folder specified above) to exclude')\n            .addText((text) => text\n            .setPlaceholder('drafts/old,archive')\n            .setValue(this.plugin.settings.excludeFolders.join(','))\n            .onChange(async (value) => {\n            Logger.debug('Setting exclude folders:', value);\n            // Split by comma, trim whitespace, normalize paths, and filter empty strings\n            this.plugin.settings.excludeFolders = value\n                .split(',')\n                .map((s) => normalizePath(s.trim()))\n                .filter((s) => s);\n            Logger.debug('Parsed exclude folders:', this.plugin.settings.excludeFolders);\n            await this.plugin.saveSettings();\n        }));\n        // Add dashboard as home page setting\n        new Setting(containerEl)\n            .setName('Set Dashboard as Home Page')\n            .setDesc('When enabled, the EditNext dashboard will be shown when opening Obsidian')\n            .addToggle((toggle) => toggle\n            .setValue(this.plugin.settings.dashboardAsHomePage)\n            .onChange(async (value) => {\n            this.plugin.settings.dashboardAsHomePage = value;\n            await this.plugin.saveSettings();\n        }));\n    }\n}\n//# sourceMappingURL=main.js.map","references":["/Users/shreyas/Desktop/Projects/editnext-plugin/node_modules/obsidian/obsidian.d.ts","/Users/shreyas/Desktop/Projects/editnext-plugin/node_modules/obsidian/obsidian.d.ts"],"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/main.ts\"],\"names\":[],\"mappings\":\"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\"}"}
